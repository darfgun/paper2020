b<-str_extract(string, "\\(.*)")
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "W.*)")
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "W.*")
b
b<-str_extract(string, "[:cntrl:]W.*")
b
regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
origin = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]],
concept = NULL)
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A","PCT12L")) %>% select('name','label','concept')
s
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12L")) %>% select('name','label','concept')
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[[1]],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[[2]]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[[1]],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[1],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
strsplit(a,",")[[1]]
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[[1]],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[[1]],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) #%>%
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")[[1]]
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a<-strsplit(a,",")
b<-a[[1]]
a
b
class(a)
class(b)
?unlist
b<-unlist(a)
class(b)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") %>% unlist,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") #%>% unlist
,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race =race_his[[1]][1],
#       hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
#       race_his = NULL
)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL
)
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")) %>% select('name','label','concept')
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL
)
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")
) %>%
select('name','label','concept') %>%
mutate(
gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>%
as.numeric,
max_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")
%>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL,
race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL)
View(census_vars)
rm(list=ls(all=TRUE))
# load packages, install if missing
packages <- c("dplyr","magrittr", "censusapi","tidyr","tidyverse","stringr")
options(tigris_use_cache = FALSE)
for(p in packages){
if(p %in% rownames(installed.packages())==FALSE){
install.packages(p)
}
suppressMessages(library(p, character.only = T, warn.conflicts=FALSE))
}
# Add key to .Renviron
key <- "d44ca9c0b07372ada0b5243518e89adcc06651ef" #TODO
Sys.setenv(CENSUS_KEY=key)
#census api
year <-2010 #TODO delete
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")
) %>%
select('name','label','concept') %>%
mutate(
gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>%
as.numeric,
max_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")
%>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL,
race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL)
data_from_api <- getCensus(name = "dec/sf1",
vintage = 2010,
vars  = c("PCT012A164","PCT012A165"),
region = "tract:*",
regionin = "state:17") %>% #TODO testzwecke
pivot_longer( cols=!(1:3), names_to = "variable", values_to = "value")
merge(data_from_api, census_vars)
join<-merge(data_from_api, census_vars)
View(join)
setnames(DF, "name", "variable")
# load packages, install if missing
packages <- c("dplyr","magrittr", "censusapi","tidyr","tidyverse","stringr","data.table")
options(tigris_use_cache = FALSE)
for(p in packages){
if(p %in% rownames(installed.packages())==FALSE){
install.packages(p)
}
suppressMessages(library(p, character.only = T, warn.conflicts=FALSE))
}
setnames(DF, "name", "variable")
setnames(census_vars, "name", "variable")
join<-merge(data_from_api, census_vars, by ="variable")
View(join)
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
census_meta$label
census_meta
head(census_meta)
source('~/Desktop/own_code2/code/test.R')
head(census_meta)
class(census_meta)
source('~/Desktop/own_code2/code/test.R')
a
head(census_meta)
class(census_meta)
census_meta$label
source('~/Desktop/own_code2/code/test.R')
head(census_meta)
label<-census_meta$label
source('~/Desktop/own_code2/code/test.R')
label<-census_meta$label
View(label)
label2<-lapply(label, function(l){
ifelse(l[1] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label2)
label2<-sapply(label, function(l){
ifelse(l[1] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label)
label[1]
label2<-sapply(label, function(l){
ifelse(l[[1]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
label2<-sapply(label, function(l){
ifelse(l[[1]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
label2
View(label)
label2<-sapply(label, function(l){
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label)
class(census_meta)
head(census_meta)
label<-census_meta$label
label[1]
label<-label[1:5]
label2<-sapply(label, function(l){
print(l)
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
label2<-sapply(label, function(l){
print(l)
print(l[[2]])
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
label2<-sapply(label, function(l){
return(c("a","b"))
print(l)
print(l[[2]])
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label2)
label2<-lapply(label, function(l){
return(c("a","b"))
print(l)
print(l[[2]])
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label2)
label2<-lapply(label, function(l){
return(l)
print(l)
print(l[[2]])
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label2)
View(label2)
label2<-lapply(label, function(l){
#return(l)
#print(l)
#print(l[[2]])
ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
l, #l[-1]
l) %>% return()
})
View(label2)
label2<-lapply(label, function(l){
#return(l)
#print(l)
#print(l[[2]])
# ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
#         l, #l[-1]
#         l) %>% return()
if(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error")){
return(l)
}else{
return(l)
}
})
View(label2)
label2<-lapply(label, function(l){
#return(l)
#print(l)
#print(l[[2]])
# ifelse(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error"),
#         l, #l[-1]
#         l) %>% return()
if(l[[2]] %in% c("Estimate","	Annotation of Estimate","Margin of Error")){
return(l[-1])
}else{
return(l[-2])
}
})
View(label2)
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/00_parent.R')
string = "Annotation of Estimate!!Total!!Male!!55 to 64 years" %>% strsplit(., "!!")
View(string)
"Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!") %>%
extract2(1)
"Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!") %>%
extract2(1)
"Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!") %>%
subset(1)
"Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!") %>%
extract2(1)
label ="Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!")
label[1]
label2 = label[[1]][1]
label2 %in% c("Annotation of Estimate")
label<-census_meta$label
View(label)
source('~/Desktop/own_code2/code/test.R')
head(census_meta)
label<-census_meta$label
label<-label[1:5]
View(label)
label2<-lapply(label, function(l){
if(l[[1]] %in% c("Estimate","	Annotation of Estimate","Margin of Error")){
return(l[-1])
}else{
return(l)
}
})
View(label2)
label ="Annotation of Estimate!!Total!!Male!!55 to 64 years" %>%
strsplit(., "!!")
label2<-lapply(label, function(l){
if(l[[1]] %in% c("Estimate","	Annotation of Estimate","Margin of Error")){
return(l[-1])
}else{
return(l)
}
})
View(label2)
label2<-lapply(label, function(l){
if(l[[1]] %in% c("Estimate","Annotation of Estimate","Margin of Error")){
return(l[-1])
}else{
return(l)
}
})
View(label2)
source('~/Desktop/own_code2/code/00_parent.R')
