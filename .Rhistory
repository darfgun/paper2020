return(result)
}
tripleInteg <-function(f){
y<-integrate(Vectorize(function(x) {
integrate(Vectorize(function(y) {
integrate(function(z) { f(x,y,z) }, -1, 2)$value }), 1,2)$value }), 0,1)
return(y)
}
tripleInteg(f)
tripleInteg <-function(f){
y<-integrate(Vectorize(function(x) {
integrate(Vectorize(function(y) {
integrate(function(z) { f(x,y,z) }, -Inf, 2)$value }), 1,2)$value }), 0,1)
return(y)
}
tripleInteg(f)
dens <-function(x,y,z){
result <-  (exp(-(0.8378378*x*x-2*0.4864865*x*y+0.5405405*y*y-2*0.5405405*x*z+2*0.3783784*y*z+0.8648649*z*z)/2)/9.25)
#result <- dmvnorm(c(x,y,z), mean = mean, sigma =sigma) #mnorm
return(result)
}
tripleInteg <-function(f){
y<-integrate(Vectorize(function(x) {
integrate(Vectorize(function(y) {
integrate(function(z) { f(x,y,z) }, -Inf, 2)$value }), 1,2)$value }), 0,1)
return(y)
}
tripleInteg(dens)
tripleInteg <-function(f){
y<-integrate(Vectorize(function(x) {
integrate(Vectorize(function(y) {
integrate(function(z) { f(x,y,z) }, -Inf, Inf)$value }), -Inf,Inf)$value }), -Inf,Inf)
return(y)
}
tripleInteg(dens)
tripleInteg <-function(f){
y<-integrate(Vectorize(function(x) {
integrate(Vectorize(function(y) {
integrate(function(z) { f(x,y,z) }, -Inf, Inf, abs.tol = 0L)$value }), -Inf,Inf, abs.tol = 0L)$value }), -Inf,Inf, abs.tol = 0L)
return(y)
}
tripleInteg(dens)
source('~/Google Drive/currentDocumants/Studium/Bachelor/6.Semester/Bachelorarbeit/Code/ba1.0.R')
source('~/Google Drive/currentDocumants/Studium/Bachelor/6.Semester/Bachelorarbeit/Code/ba1.0.R')
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
example(stan_model,run.dontrun = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
example(stan_model,run.dontrun = TRUE)
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
source('~/Google Drive/currentDocumants/mixed Data/2020/2020job/HIGH/Progress/data/R code/code1.R')
Sys.setenv(MAKEFLAGS = "-j4") # four cores used
install.packages("rstan", type = "source")
library(rstan)
example(stan_model,run.dontrun = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
#test
library(rstan)
example(stan_model,run.dontrun = TRUE)
remotes::install_github("stan-dev/rstan", ref = "develop",
subdir = "rstan/rstan", build_opts = "")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(Rcpp)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
#Sys.setenv(MAKEFLAGS = "-j4") # four cores used
install.packages("rstan", type = "source")
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(rstan)
#Sys.setenv(MAKEFLAGS = "-j4") # four cores used
#install.packages("rstan", type = "source")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(rstan)
example(stan_model,run.dontrun = TRUE)
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(rstan)
#Sys.setenv(MAKEFLAGS = "-j4") # four cores used
install.packages("loo", type = "source")
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(rstan)
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(loo)
#Sys.setenv(MAKEFLAGS = "-j4") # four cores used
install.packages("loo", type = "source")
example(stan_model,run.dontrun = TRUE)
library(rstan)
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
n
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
#remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan", build_opts = "")
#test
library(Rcpp)
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
library(sf)
?st_point
?st_sfc
?st_transform
source('~/Desktop/own_code2/01_get_exp.R')
year <- 2016
long <- -120
lat <- -120
exp_data <- getExposureH5F(year)
long_vec <-  c(as.matrix(exp_data$longitude))
#long_vec <-  c(as.matrix(exp_data$longitude))
long_vec <-  getLatVec(exp_data)
long_vec <-  getLatVec(exp_data)
lat_vec <- getLongVec(exp_data)
lat_vec
long_vec
#make sure in grid
filepathM <- getFilePathMExp(year)
load(filepathM)
long <- -120.5056
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
#}
c(long,long_clos,long_vec[r_final])
ru <-runif(1, min=-140,max=-120)
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
}
c(long,long_clos,long_vec[r_final])
ru <-runif(10, min=-140,max=-120)
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
}
c(long,long_clos,long_vec[r_final])
ru <-runif(10, min=-140,max=-120)
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
c(long,long_clos,long_vec[r_final])
}
ru <-runif(10, min=-140,max=-120)
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
print(c(long,long_clos,long_vec[r_final]))
}
ru <-runif(10, min=-140,max=-120)
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1 #TODO pipe
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
print(c(long,long_clos,long_vec[r_final]))
}
#r_final2 <- long_vec[r1:r2]-long_clos #%>%
#abs %>%
#which.min %>%
#sum(r1-1)
print(c(long,long_clos,long_vec[r_final]))
long_vec[1]
r_final2 <- long_vec[r1:r2]-long_clos #%>%
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs #%>%
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs #%>%
r_final2 <- long_vec[r1:r2]-long_clos #%>%
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>%
r_final2
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r11<-1+(long_clos-long_vec[1])/m_max_long %>%
floor
print(c(r1,r11))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r11<-1+(long_clos-long_vec[1])/m_max_long %>%
floor(.)
print(c(r1,r11))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-1+(long_clos-long_vec[1])/m_max_long %>%
(floor)
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-1+(long_clos-long_vec[1])/m_max_long %>%
(floor)
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-1+(long_clos-long_vec[1])/m_max_long %>%
floor()
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-1+(long_clos-long_vec[1])/m_max_long %>%
floor()
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-(1+(long_clos-long_vec[1])/m_max_long %>%
floor())
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-(1+(long_clos-long_vec[1])/m_max_long %>%
floor())
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-(1+((long_clos-long_vec[1])/m_max_long) %>%
floor())
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-(1+((long_clos-long_vec[1])/m_max_long) %>%
floor)
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-floor(1+(long_clos-long_vec[1])/m_max_long)
r1_pipe<-1+((long_clos-long_vec[1])/m_max_long) %>%
floor
print(c(r1,r1_pipe))
r2<-ceiling(1+(long_clos-long_vec[1])/m_min_long)
subset<-long_vec[r1:r2]
r_final <- r1+which.min(abs(long_vec[r1:r2]-long_clos))-1
r_final2 <- long_vec[r1:r2]-long_clos %>%
abs(.) #%>% #TODO abs gibt etwas falsches
#which.min %>%
#sum(r1-1)
}
r_final2 <- (long_vec[r1:r2]-long_clos) %>%
abs #%>% #TODO abs gibt etwas falsches
r_final2 <- (subset-long_clos) %>%
abs #%>% #TODO abs gibt etwas falsches
r_final2 <- (subset-long_clos) %>%
abs %>% #TODO abs gibt etwas falsches
which.min #%>%
r_final2
ru <-runif(10, min=-140,max=-120) #TODO delete
for(long in ru){
long_clos <- sum(long,0.005)%>%
round(.,digit=2) %>%
sum(-0.005) %>%
min(.,long_vec[length(long_vec)]) %>%
max(.,long_vec[1])
r1<-1+((long_clos-long_vec[1])/m_max_long) %>%
floor
r2<-1+((long_clos-long_vec[1])/m_min_long) %>%
ceiling
subset<-long_vec[r1:r2] #subset, where long is most likely located
r_final <- r1+which.min(abs(subset-long_clos))-1
r_final2 <- (subset-long_clos) %>%
abs %>% #TODO abs gibt etwas falsches
which.min %>%
sum(r1-1)
print(c(r_final,r_final2))
}
source('~/Desktop/own_code2/01_get_exp.R')
View(tmp)
tmp$exposure
