gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] ,
max_age = strsplit(label, "!!")[[1]][3])
View(census_vars2)
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = "PCT12A") %>% select('name','label','concept')
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] ,
max_age = strsplit(label, "!!")[[1]][3])
census_vars3 <-census_vars2 %>% mutate(min_age = str_extract_all(min_age, "[:digit:]+")[[1]]  %>% as.numeric)
View(census_vars3)
census_vars3 <-census_vars2 %>% mutate(min_age = str_extract_all(min_age, "[:digit:]+")[[1]]  %>% as.numeric,
max_age = str_extract_all(max_age, "[:digit:]+")[[1]]  %>% as.numeric)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] ,
max_age = strsplit(label, "!!")[[1]][3],
label = NULL)
census_vars3 <-census_vars2 %>% mutate(min_age = str_extract_all(min_age, "[:digit:]+")[[1]]  %>% as.numeric,
max_age = str_extract_all(max_age, "[:digit:]+")[[1]]  %>% as.numeric)
string = "57 years"
b<-str_extract_all(string, "[:digit:]+")[[1]]  %>% as.numeric
b
string = "57 years"
b<-str_extract_all(string, "[:digit:]+")[[1]] # %>% as.numeric
b
string = "57 years"
b<-str_extract(string, "[:digit:]+")#[[1]] # %>% as.numeric
b
b<-str_extract(string, "[:digit:]+")  %>% as.numeric
b
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3],
label = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL)
View(census_vars2)
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "(.*)")
b
b<-str_extract(string, "\\(.*)")
b<-str_extract(string, "\(.*)")
?gsub
?str_extract
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "\(.*)")
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "(.*)")
b
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "\\(.*)")
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "W.*)")
string = "SEX BY AGE (WHITE ALONE)"
b<-str_extract(string, "W.*")
b
b<-str_extract(string, "[:cntrl:]W.*")
b
regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
origin = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]],
concept = NULL)
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A","PCT12L")) %>% select('name','label','concept')
s
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12L")) %>% select('name','label','concept')
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[[1]],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[[2]]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) %>%
mutate(race =race_his[[1]],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[1],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
strsplit(a,",")[[1]]
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[[1]],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = (regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","))[[1]],
concept = NULL) %>%
mutate(race =race_his[1],
hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
race_his = NULL)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL) #%>%
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a
strsplit(a,",")[[1]]
string = "SEX BY AGE (WHITE ALONE, Hispanic)"
a<-regmatches(string, gregexpr("(?<=\\().*?(?=\\))", string, perl=T))[[1]]
a<-strsplit(a,",")
b<-a[[1]]
a
b
class(a)
class(b)
?unlist
b<-unlist(a)
class(b)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") %>% unlist,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") #%>% unlist
,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) #%>%
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race =race_his[[1]][1],
#       hispanic_origin = ifelse(length(race_his) == 1, "all", race_his[2]),
#       race_his = NULL
)
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL
)
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")) %>% select('name','label','concept')
census_vars2 <- census_vars%>%mutate(gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>% as.numeric,
max_age = strsplit(label, "!!")[[1]][3]%>%
str_extract(., "[:digit:]+")  %>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,",") ,
concept = NULL) %>%
mutate(race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL
)
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")
) %>%
select('name','label','concept') %>%
mutate(
gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>%
as.numeric,
max_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")
%>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL,
race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL)
View(census_vars)
rm(list=ls(all=TRUE))
# load packages, install if missing
packages <- c("dplyr","magrittr", "censusapi","tidyr","tidyverse","stringr")
options(tigris_use_cache = FALSE)
for(p in packages){
if(p %in% rownames(installed.packages())==FALSE){
install.packages(p)
}
suppressMessages(library(p, character.only = T, warn.conflicts=FALSE))
}
# Add key to .Renviron
key <- "d44ca9c0b07372ada0b5243518e89adcc06651ef" #TODO
Sys.setenv(CENSUS_KEY=key)
#census api
year <-2010 #TODO delete
census_vars <- listCensusMetadata(
name = "dec/sf1",
vintage = 2010,
type = "variables",
group = c("PCT12A")
) %>%
select('name','label','concept') %>%
mutate(
gender = strsplit(label, "!!")[[1]][2],
gender_label = ifelse(gender == "Female", 'F', 'M'),
min_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")  %>%
as.numeric,
max_age = strsplit(label, "!!")[[1]][3] %>%
str_extract(., "[:digit:]+")
%>% as.numeric,
label = NULL,
race_his = regmatches(concept, gregexpr("(?<=\\().*?(?=\\))", concept, perl=T))[[1]] %>%
strsplit(.,","),
concept = NULL,
race = race_his[[1]][1],
hispanic_origin = ifelse(length(race_his[[1]]) == 1, "all", race_his[[1]][2]),
race_his = NULL)
data_from_api <- getCensus(name = "dec/sf1",
vintage = 2010,
vars  = c("PCT012A164","PCT012A165"),
region = "tract:*",
regionin = "state:17") %>% #TODO testzwecke
pivot_longer( cols=!(1:3), names_to = "variable", values_to = "value")
merge(data_from_api, census_vars)
join<-merge(data_from_api, census_vars)
View(join)
setnames(DF, "name", "variable")
# load packages, install if missing
packages <- c("dplyr","magrittr", "censusapi","tidyr","tidyverse","stringr","data.table")
options(tigris_use_cache = FALSE)
for(p in packages){
if(p %in% rownames(installed.packages())==FALSE){
install.packages(p)
}
suppressMessages(library(p, character.only = T, warn.conflicts=FALSE))
}
setnames(DF, "name", "variable")
setnames(census_vars, "name", "variable")
join<-merge(data_from_api, census_vars, by ="variable")
View(join)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
tablename == "dec/sf1"
tablename == "acs/acs5"
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
#--------parameters of code-------------------
years <- c(2011)
# Run code
for(year in years)
runscript(script=download.cens.script, args = paste(censDir,tmpDir, year))
source('~/Desktop/own_code2/code/00_parent.R')
#--------parameters of code-------------------
years <- c(2010)
# Run code
for(year in years)
runscript(script=download.cens.script, args = paste(censDir,tmpDir, year))
#--------parameters of code-------------------
years <- c(2011)
# Run code
for(year in years)
runscript(script=download.cens.script, args = paste(censDir,tmpDir, year))
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/00_parent.R')
#--------parameters of code-------------------
years <- c(2010)
# Run code
for(year in years)
runscript(script=download.cens.script, args = paste(censDir,tmpDir, year))
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
?pivot_wider
tic("pivotwider")
data3<-  pivot_wider(data,
names_from = "variable",
names_from = "value")
tic("pivotwider")
data3<-  pivot_wider(data,
names_from = "variable",
values_from = "value")
toc()
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(data)
View(data3)
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/00_parent.R')
censDir
censDir<-"/Users/default/Desktop/own_code2/data/06_census/meta/cens_meta_2011.csv"
filepathCensMeta<-"/Users/default/Desktop/own_code2/data/06_census/meta/cens_meta_2011.csv"
census_meta <- read.csv(filepathCensMeta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
colnames(census_meta)
colnames(census_meta)<- lapply(colnames(census_meta),
as.character)
colnames(census_meta)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(data_from_api)
data_from_api2 <-data_from_api[[1]]
View(data_from_api2)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(data_from_api)
colnames(data_from_api2)
colnames(data_from_api2) %>%
sapply(function(colname){
str_sub(colname, start= -2)
})
a<colnames(data_from_api2) %>%
sapply(function(colname){
str_sub(colname, start= -2)
})
a<colnames(data_from_api2) %>%
sapply(function(colname){
str_sub(colname, start= -2)
})
a<-colnames(data_from_api2) %>%
sapply(function(colname){
str_sub(colname, start= -2)
})
data_from_api3<- data_from_api2 %>% select("GEO_ID")
data_from_api3<- data_from_api2 %>% select("GEO_ID","Name")
data_from_api3<- data_from_api2 %>% select(one_of("GEO_ID", "Name")) #select("GEO_ID","Name")
data_from_api3<- data_from_api2 %>% select(any_of(c("GEO_ID", "Name")))
source('~/Desktop/own_code2/code/test.R')
View(data_from_api)
source('~/Desktop/own_code2/code/test.R')
View(census_meta)
View(data_from_api)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
View(data_from_api)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
data_from_api2<-data_from_api%>%
do.call(rbind,.) #%>%
#as.data.frame #%>%
View(data_from_api2)
source('~/Desktop/own_code2/code/test.R')
View(data_from_api2)
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/test.R')
source('~/Desktop/own_code2/code/00_parent.R')
source('~/Desktop/own_code2/code/00_parent.R')
